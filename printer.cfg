# Ender 3 with BIGTREETECH SKR v1.3 and TMC 2130 drivers
# Based on https://github.com/KevinOConnor/klipper/blob/master/config/printer-creality-ender3-2018.cfg
# and https://github.com/KevinOConnor/klipper/blob/master/config/generic-bigtreetech-skr-v1.3.cfg
# See the example.cfg file for a description of available parameters.

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2500
max_accel_to_decel: 2500
square_corner_velocity: 5
max_z_velocity: 5
max_z_accel: 100

[input_shaper]
shaper_freq_x: 42.6
shaper_freq_y: 42.9
shaper_type: mzv

[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1768_100C1111171C54530E33D04D020000F5-if00

[temperature_sensor host_temp]
sensor_type: temperature_host

[bltouch]
# Pull-up (^ symbol) needed in open drain mode
# Using Z-max endstop
sensor_pin: ^P1.24
control_pin: P2.0
#z_offset: 0.849
x_offset: -57.0
y_offset: -21.0
samples: 3
speed: 10
probe_with_touch_mode: True
stow_on_each_sample: False

[safe_z_home]
home_xy_position: 120,120 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
step_distance: .0125
endstop_pin: P1.29
position_endstop: 0
position_max: 202
position_min: 0
homing_speed: 50

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
step_distance: .0125
endstop_pin: P1.27
position_endstop: -12
position_max: 219
position_min: -12
homing_speed: 50

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
step_distance: .0025
#endstop_pin: P1.25
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 200
position_min: -0.5
homing_speed: 10
second_homing_speed: 5

[extruder]
max_extrude_only_distance: 500.0
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
step_distance: 0.00231978054
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300
pressure_advance: 0.078
pressure_advance_smooth_time: 0.040

# connected to LM2596 DC-DC step down (24 V -> 12 V) enable (active low)
[heater_fan hotend_fan]
pin: !P1.31
max_power: 1
shutdown_speed: 1
#cycle_time:
#hardware_pwm: False
#kick_start_time: 0.1
#off_below:
#   See the "fan" section for a description of the above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

# Extra thermistor attached to TH1 input, measuring stepper driver E0 heatsink
#[temperature_sensor board_temp]
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: P0.25
#min_temp:
#max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

# enclosure fan than runs to keep the electronics cool
# temperature input provided by thermistor attached to stepper_x heatsink
# 4 12V fans in electronic enclosure connceted to HE1 heater output
[temperature_fan board_fan]
pin: P2.4
max_power: 0.5
shutdown_speed: 0
#cycle_time:
#hardware_pwm:
kick_start_time: 0.1
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
control: pid
pid_Kp: 5
pid_Ki: 0.5
pid_Kd: 25
#pid_deriv_time:
#pid_integral_max:
#max_delta:
min_temp: 0.0
max_temp: 90.0
#   See the "extruder" section for a description of the above parameters.
target_temp: 50.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
#max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
min_speed: 0.0 #0.2 is good non-stall speed
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to for PID temperature fans.
#   The default is 0.3.
#gcode_id:
#   If set, the temperature will be reported in M105 queries using the
#   given id. The default is to not report the temperature via M105.

#[fan_generic test_fan] # for testing min PWM speed
#pin: P2.4
#max_power: 0.5
#shutdown_speed: 0
#cycle_time:
#hardware_pwm:
#kick_start_time: 0.1
#off_below: 0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.

########################################
# TMC2130 configuration
########################################
# For TMC SPI
#   1) Place jumpers on all the red pin headers under the stepper drivers
#   2) Remove jumpers from the red pin headers labeled XUART (XUART, YUART etc.)

[tmc2130 stepper_x]
cs_pin: P1.17
spi_software_miso_pin: P0.5
spi_software_mosi_pin: P4.28
spi_software_sclk_pin: P0.4
#diag1_pin: P1.29
microsteps: 16
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2130 stepper_y]
cs_pin: P1.15
spi_software_miso_pin: P0.5
spi_software_mosi_pin: P4.28
spi_software_sclk_pin: P0.4
#diag1_pin: P1.27
microsteps: 16
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2130 stepper_z]
cs_pin: P1.10
spi_software_miso_pin: P0.5
spi_software_mosi_pin: P4.28
spi_software_sclk_pin: P0.4
#diag1_pin: P1.25
microsteps: 16
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999

[tmc2130 extruder]
# driver config 
cs_pin: P1.8
spi_software_miso_pin: P0.5
spi_software_mosi_pin: P4.28
spi_software_sclk_pin: P0.4
#diag1_pin: P1.28
microsteps: 16
run_current: 0.700
hold_current: 0.700
stealthchop_threshold: 999999
driver_PWM_GRAD: 8

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.23
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: P2.3

[display]
# Use EXP1 header
lcd_type: st7920
cs_pin: P1.22
sclk_pin: P1.21
sid_pin: P1.23
encoder_pins: ^P1.20, ^P1.18
click_pin: ^!P0.28

#[homing_override]
#set_position_z: 0
#gcode:
# G0 Z10
# G28 X Y
# G1 X65 Y30 F3600
# G28 Z
# #BED_MESH_CALIBRATE

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: -8,15
mesh_max: 144,198
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 1.0
fade_end: 10.0

######################################
# LCD Menu mods

[menu __main __prepare]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Prepare

[menu __main __prepare meshBed]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Mesh Bed Level

[menu __main __prepare meshBed start]
type: command
name: Start Callibration
gcode:
	G28
	BED_MESH_CALIBRATE
	TESTZ Z=-5

[menu __main __prepare meshBed abort]
type: command
name: Abort
gcode: ABORT

[menu __main __prepare meshBed zposition]
type: input
name: Z Pos: {'%+05.3f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: 200
input_step: 10.0

[menu __main __prepare meshBed zNudgeUp]
type: command
name: Nudge Up
gcode: TESTZ Z=0.025

[menu __main __prepare meshBed zNudgeDown]
type: command
name: Nudge Down
gcode: TESTZ Z=-0.025

[menu __main __prepare meshBed next]
type: command
name: Next
gcode:
	ACCEPT
	TESTZ Z=-5

[menu __main __prepare meshBed save]
type: command
name: Save & Restart
gcode: SAVE_CONFIG


[menu __main __prepare bedScrews]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed Screws Adjust

[menu __main __prepare bedScrews start]
type: command
name: Start
gcode: 
	G28
	BED_SCREWS_ADJUST

[menu __main __prepare bedScrews accept]
type: command
name: Accept
gcode: ACCEPT

[menu __main __prepare bedScrews adjusted]
type: command
name: Adjusted
gcode: ADJUSTED

[menu __main __prepare bedScrews abort]
type: command
name: Abort
gcode: ABORT

####################
# normal menu overrides
# make min speed non zero to prevent errors
[menu __main __tune __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.1
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

# disable octoprint LCD menu
[menu __main __octoprint]
type: disabled

# Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 10,33
#   The X,Y coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to that is directly above the bed
#   screw (or as close as possible while still being above the bed).
#   This parameter must be provided.
screw1_name: front left
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
#screw1_fine_adjust:
#   An X,Y coordinate to command the nozzle to so that one can fine
#   tune the bed leveling screw. The default is to not perform fine
#   adjustments on the bed screw.
screw2: 180,33
screw2_name: front right
#screw2_fine_adjust:
screw3: 180,203
screw3_name: rear right
screw4: 10,203
screw4_name: rear left
#   Additional bed leveling screws. At least three screws must be
#   defined.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   when moving from one screw location to the next. The default is 5.
#probe_height: 0
#   The height of the probe (in mm) after adjusting for the thermal
#   expansion of bed and nozzle. The default is zero.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#probe_speed: 5
#   The speed (in mm/s) when moving from a horizontal_move_z position
#   to a probe_height position. The default is 5.

[screws_tilt_adjust]
screw1: 70,54
#   The X,Y coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to that is directly above the bed
#   screw (or as close as possible while still being above the bed).
#   This is the base screw used in calculations. This parameter must
#   be provided.
screw1_name: front left
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
screw2: 200,54
screw2_name: front right
screw3: 200,218
screw3_name: rear right
screw4: 70,218
screw4_name: rear left
#   Additional bed leveling screws. At least two screws must be
#   defined.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
screw_thread: CW-M4
#   The type of screw used for bed level, M3, M4 or M5 and the
#   direction of the knob used to level the bed, clockwise decrease
#   counter-clockwise decrease.
#   Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5.
#   Default value is CW-M3, most printers use an M3 screw and
#   turning the knob clockwise decrease distance.

[virtual_sdcard]
path: ~/gcode_files

#########################################################
# ~~~~~~~~~~ GCODE MACROS ~~~~~~~~~~~~~~~~~~~~~ #

# Start print gcode defined here
# in slicer, use only the following lines for start gcode:
# SuperSlicer:
# START_PRINT EXTRUDER_TEMP={first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} BED_TEMP=[first_layer_bed_temperature]
# Cura:
# START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}
[gcode_macro START_PRINT]
default_parameter_EXTRUDER_TEMP: 190
default_parameter_BED_TEMP: 60
gcode:
    RUN_SHELL_COMMAND CMD=turn_on_printer
    G4 P2500
    # Clears the current paused state
    CLEAR_PAUSE
    # set extruder temp
    M104 S{EXTRUDER_TEMP}
    # set and wait for bed temp
    M190 S{BED_TEMP}
    # wait for extruder temp
    M109 S{EXTRUDER_TEMP}
    # set temp target for electronics
    SET_TEMPERATURE_FAN_TARGET temperature_fan=board_fan TARGET=65
    # Absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # home all
    G28
    # reset extruder
    G92 E0
    # move to purge position
    G1 X1.0 Y-10.0 Z10 F3000
    G1 Z0.2
    # relative positioning
    G91
    # Feed in filament and retract a bit
    G1 E14 F200
    G1 E-2
    # Beep to indicate done purging, dwell 2 sec to allow time to manually remove
    M300
    G4 P2000
    # Absolute positioning
    G90
    # move onto platform and avoid clip
    G1 Y25 F3000
    RUN_SHELL_COMMAND CMD=print_started

# End print gcode defined here
# in slicer, use only the following lines for start gcode:
# SuperSlicer:
# END_PRINT
# Cura:
# END_PRINT
[gcode_macro END_PRINT]
gcode:
    # Relative positioning
    G91
    # Retract a bit, raise Z, wipe out, restract more, raise Z more
    G1 E-2 F2700
    G1 E-2 Z5 F2400
    G1 X-5 Y5 F3000
    G1 E-4 F500
    G1 Z10
    G90
    # Present Print
    G1 X5 Y205 F3000
    # Turn off fan, hotend, bed
    M106 S0
    TURN_OFF_HEATERS
    # set target electronics temp higher than during print (effectively turns it off, so it's not trying to spin at <10% forever)
    SET_TEMPERATURE_FAN_TARGET temperature_fan=board_fan TARGET=70
    # Disable all steppers but Z
    M84 X Y E
    RUN_SHELL_COMMAND CMD=print_done

##########################################################
# Printer power control
##########################################################
[gcode_shell_command turn_on_printer]
command: wget -q -O /dev/null https://node-red.auffinger.dev/3dprinter/ender3/turn_on_printer
timeout: 2.
verbose: False

# helper to put macro on Mainsail interface
[gcode_macro turn_on_printer]
gcode: RUN_SHELL_COMMAND CMD=turn_on_printer

[gcode_shell_command turn_off_printer]
command: wget -q -O /dev/null https://node-red.auffinger.dev/3dprinter/ender3/turn_off_printer
timeout: 2.
verbose: False

# helper to put macro on Mainsail interface
[gcode_macro turn_off_printer]
gcode: RUN_SHELL_COMMAND CMD=turn_off_printer

########################################################
# Printer status notifiers
########################################################
[gcode_shell_command print_started]
command: wget -q -O /dev/null https://node-red.auffinger.dev/3dprinter/ender3/print_started
timeout: 2.
verbose: False

[gcode_shell_command print_done]
command: wget -q -O /dev/null https://node-red.auffinger.dev/3dprinter/ender3/print_done
timeout: 2.
verbose: False

######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[output_pin BEEPER_pin]
pin: P1.30
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   PWM frequency : 0.001 = 1ms will give a base tone of 1kHz
scale: 1000
#   PWM parameter will be in the range of (0-1000 Hz).
#   Although not pitch perfect.

[gcode_macro M300]
default_parameter_S: 440
#   Use a default 1kHz tone if S is omitted.
default_parameter_P: 50
#   Use a 100ms duration is P is omitted.
gcode:
    SET_PIN PIN=BEEPER_pin VALUE={S}
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

#########################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  AUTOCREATED WITH KIAUH  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
#########################################################################################
# Those are the recommended macros and config entries if you use Mainsail or Fluidd!    #
# Feel free to edit or delete those macros if you already have them defined elsewhere!  #
#########################################################################################

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    RUN_SHELL_COMMAND CMD=print_done
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

#########################################################################################
#########################################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.098333, 0.044167, 0.019167, -0.013333, -0.020000
#*# 	  0.085000, 0.025000, -0.016667, -0.045833, -0.050833
#*# 	  0.106667, 0.031667, -0.020833, -0.068333, -0.071667
#*# 	  0.109167, 0.035833, -0.019167, -0.066667, -0.068333
#*# 	  0.159167, 0.078333, 0.043333, 0.012500, 0.020833
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -8.0
#*# max_x = 144.0
#*# min_y = 15.0
#*# max_y = 198.0
#*#
#*# [bltouch]
#*# z_offset = 0.650
